name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      id: restore
      run: dotnet restore
      continue-on-error: true

    - name: Notify on restore failure
      if: steps.restore.outcome == 'failure'
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ env.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -H "Content-Type: application/json" \
          -d '{
            "chat_id": "${{ env.TELEGRAM_CHAT_ID }}",
            "parse_mode": "HTML",
            "text": "ðŸš« <b>Build Failed</b>\n\n<b>Project:</b> ImageConverter\n<b>Branch:</b> ${{ github.ref_name }}\n<b>Commit:</b> <a href=\"${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}\">${{ github.sha }}</a>\n\n<b>Author:</b> ${{ github.actor }}\n<b>Commit Message:</b> ${{ github.event.head_commit.message }}\n\n<b>Error:</b> Failed to restore dependencies"
          }'
    
    - name: Build
      id: build
      if: steps.restore.outcome == 'success'
      run: dotnet build --no-restore
      continue-on-error: true

    - name: Notify on build failure
      if: steps.build.outcome == 'failure'
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ env.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -H "Content-Type: application/json" \
          -d '{
            "chat_id": "${{ env.TELEGRAM_CHAT_ID }}",
            "parse_mode": "HTML",
            "text": "ðŸš« <b>Build Failed</b>\n\n<b>Project:</b> ImageConverter\n<b>Branch:</b> ${{ github.ref_name }}\n<b>Commit:</b> <a href=\"${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}\">${{ github.sha }}</a>\n\n<b>Author:</b> ${{ github.actor }}\n<b>Commit Message:</b> ${{ github.event.head_commit.message }}\n\n<b>Error:</b> Build failed"
          }'
    
    - name: Test
      id: test
      if: steps.build.outcome == 'success'
      run: dotnet test --no-build --verbosity normal
      continue-on-error: true

    - name: Notify on test failure
      if: steps.test.outcome == 'failure'
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ env.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -H "Content-Type: application/json" \
          -d '{
            "chat_id": "${{ env.TELEGRAM_CHAT_ID }}",
            "parse_mode": "HTML",
            "text": "ðŸš« <b>Tests Failed</b>\n\n<b>Project:</b> ImageConverter\n<b>Branch:</b> ${{ github.ref_name }}\n<b>Commit:</b> <a href=\"${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}\">${{ github.sha }}</a>\n\n<b>Author:</b> ${{ github.actor }}\n<b>Commit Message:</b> ${{ github.event.head_commit.message }}\n\n<b>Error:</b> Tests failed"
          }'

    - name: Notify on success
      if: steps.test.outcome == 'success'
      run: |
        curl -s -X POST "https://api.telegram.org/bot${{ env.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -H "Content-Type: application/json" \
          -d '{
            "chat_id": "${{ env.TELEGRAM_CHAT_ID }}",
            "parse_mode": "HTML",
            "text": "âœ… <b>Build and Tests Passed</b>\n\n<b>Project:</b> ImageConverter\n<b>Branch:</b> ${{ github.ref_name }}\n<b>Commit:</b> <a href=\"${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}\">${{ github.sha }}</a>\n\n<b>Author:</b> ${{ github.actor }}\n<b>Commit Message:</b> ${{ github.event.head_commit.message }}\n\n<b>Status:</b> All tests passed successfully"
          }'
